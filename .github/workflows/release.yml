name: Release NuGet package

on:
  workflow_dispatch:
    inputs:
      version_prefix:
        description: 'Version prefix such as `1.2` in `1.2.3`'
        required: true
        default: '0.1'
      prerelease_version_suffix:
        description: 'Version suffix such as `-alpha1` in `1.2.3-alpha1`'

jobs:
  run-tests:
    runs-on: windows-latest

    strategy:
      matrix:
        dotnet: [
          { framework: net48, version: 5.0.102 },
        ]

    name: ${{ matrix.dotnet.framework }} – run tests

    steps:
      - uses: actions/checkout@v2

      - name: Start Cosmos DB Emulator
        shell: powershell
        run: |
          Import-Module "$env:ProgramFiles\Azure Cosmos DB Emulator\PSModules\Microsoft.Azure.CosmosDB.Emulator"
          Start-CosmosDbEmulator

      - name: Run tests
        env:
          COSMOS_CONNECTION_STRING: "AccountEndpoint=https://localhost:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="
        run: |
          dotnet test --configuration Release --framework ${{ matrix.dotnet.framework }} ./Dodo.AspNet.SessionProviders.CosmosDb.Tests/Dodo.AspNet.SessionProviders.CosmosDb.Tests.csproj /p:Framework=${{ matrix.dotnet.framework }}

  publish-package:
    needs: [run-tests]

    runs-on: windows-latest

    strategy:
      matrix:
        dotnet: [
          { framework: net48, version: 5.0.102 },
        ]

    name: ${{ matrix.dotnet.framework }} – publish package

    steps:
      - uses: actions/checkout@v2

      - name: Build and publish library to NuGet
        run: |
          dotnet pack --configuration Release --output out/ ./Dodo.AspNet.SessionProviders.CosmosDb/Dodo.AspNet.SessionProviders.CosmosDb.csproj /p:Version=${{ github.event.inputs.version_prefix }}${{ github.run_number }}${{ github.event.inputs.version_suffix }}
          dotnet nuget push out/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
